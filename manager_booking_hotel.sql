-- TABLE DOANH NGHIEP
CREATE TABLE IF NOT EXISTS `concerns` (
  `concern_id` VARCHAR(32) UNIQUE NOT NULL,
  `concern_name` VARCHAR(90) NOT NULL UNIQUE,
  `concern_desc` TEXT,
  `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  `updated_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`concern_id`)
) ENGINE = InnoDB;

-- TABLE KHACH SANG
CREATE TABLE IF NOT EXISTS `hotels` (
  `hotel_id` VARCHAR(32) UNIQUE NOT NULL,
  `hotel_name` VARCHAR(50) UNIQUE NOT NULL,
  `hotel_desc` TEXT NOT NULL,
  `hotel_address` VARCHAR(255) NOT NULL,
  `hotel_title` TEXT,
  `hotel_image` TEXT,
  `file_name_img` VARCHAR(100) NOT NULL,
  `district_code` VARCHAR(30) NOT NULL,
  `district_name` VARCHAR(60) NOT NULL,
  `provice_code` VARCHAR(30) NOT NULL,
  `provice_name` VARCHAR(60) NOT NULL,
  `ward_code` VARCHAR(30) NOT NULL,
  `ward_name` VARCHAR(60) NOT NULL,
  `slug` VARCHAR(255) NOT NULL,
  `hotel_rating` INTEGER CHECK(
    hotel_rating >= 0
    AND hotel_rating <= 10
  ),
  `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  `updated_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`hotel_id`)
) ENGINE = InnoDB;

-- TABLE DOANH NGHIEP VA KHACH HANG HOP TAC
CREATE TABLE IF NOT EXISTS `contracts` (
  `contract_id` VARCHAR(32) UNIQUE NOT NULL,
  `concern_id` VARCHAR(32) NOT NULL,
  `hotel_id` VARCHAR(32) NOT NULL,
  `date_start` DATE,
  `date_end` DATE,
  `signature` BOOLEAN DEFAULT TRUE,
  FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id) ON DELETE CASCADE ON UPDATE CASCADE,
  FOREIGN KEY (concern_id) REFERENCES concerns(concern_id) ON DELETE CASCADE ON UPDATE CASCADE,
  PRIMARY KEY (`concern_id`, `hotel_id`, `contract_id`)
) ENGINE = InnoDB;

-- TABLE ANH CUA KHACH SAN
CREATE TABLE IF NOT EXISTS `hotel_images` (
  `h_image_id` VARCHAR(32) UNIQUE NOT NULL,
  `hotel_id` VARCHAR(32) NOT NULL,
  `h_image_value` TEXT,
  `file_name` TEXT,
  PRIMARY KEY (`h_image_id`),
  FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE = InnoDB;

-- TABLE NHAN VIEN
CREATE TABLE IF NOT EXISTS `users` (
  `user_id` VARCHAR(32) UNIQUE NOT NULL,
  `first_name` VARCHAR(20) NOT NULL,
  `last_name` VARCHAR(20) NOT NULL,
  `email` VARCHAR(30) NOT NULL,
  `username` VARCHAR(32) UNIQUE NULL,
  `password` VARCHAR(80) NULL,
  `phone` VARCHAR(10) UNIQUE NULL,
  `identity_card` VARCHAR(15) UNIQUE NULL,
  `year_of_brith` VARCHAR(4) DEFAULT '',
  `address` VARCHAR(40) DEFAULT '',
  `picture` TEXT DEFAULT '',
  `file_name_picture` TEXT DEFAULT '',
  `hotel_id` VARCHAR(32) DEFAULT NULL,
  `is_verify` BOOLEAN DEFAULT 0,
  `role` ENUM('ADMIN', 'HOTEL', 'USER') DEFAULT 'USER',
  `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  `updated_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id) ON DELETE CASCADE ON UPDATE CASCADE,
  PRIMARY KEY (`user_id`)
) ENGINE = InnoDB;

-- TABLE TRANG THAI
CREATE TABLE IF NOT EXISTS `statuses` (
  `status_id` VARCHAR(32) UNIQUE NOT NULL,
  `type` VARCHAR(6) NOT NULL,
  `desc` VARCHAR(50) NOT NULL,
  `key` VARCHAR(5) NOT NULL UNIQUE,
  `value` VARCHAR(20) NOT NULL UNIQUE,
  PRIMARY KEY (`status_id`)
) ENGINE = InnoDB;

-- TABLE HOA DON CUA KHACH HANG
CREATE TABLE IF NOT EXISTS `bills` (
  `bill_id` VARCHAR(32) UNIQUE NOT NULL,
  `user_id` VARCHAR(32) NOT NULL,
  `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE ON UPDATE CASCADE,
  PRIMARY KEY (`bill_id`)
) ENGINE = InnoDB;

-- TABLE DICH VU CUA KHACH SAN
CREATE TABLE IF NOT EXISTS `services` (
  `service_id` VARCHAR(32) UNIQUE NOT NULL,
  `service_name` VARCHAR(50) UNIQUE NOT NULL,
  `service_desc` VARCHAR(50) DEFAULT '',
  `service_price` INTEGER NOT NULL CHECK (service_price > 10),
  `hotel_id` VARCHAR(32) NOT NULL,
  `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  `updated_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id) ON DELETE CASCADE ON UPDATE CASCADE,
  PRIMARY KEY (`service_id`)
) ENGINE = InnoDB;

-- TABLE TANG
CREATE TABLE IF NOT EXISTS `floors` (
  `floor_id` VARCHAR(32) UNIQUE NOT NULL,
  `floor_name` VARCHAR(50) UNIQUE NOT NULL,
  `floor_type` VARCHAR(5) NOT NULL,
  `hotel_id` VARCHAR(32) NOT NULL,
  FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id) ON DELETE CASCADE ON UPDATE CASCADE,
  PRIMARY KEY (`floor_id`)
) ENGINE = InnoDB;

-- TABLE LOAI PHONG
CREATE TABLE IF NOT EXISTS `room_types` (
  `rt_id` VARCHAR(32) UNIQUE NOT NULL,
  `rt_name` VARCHAR(50) NOT NULL,
  `rt_type` VARCHAR(6) UNIQUE NOT NULL,
  `rt_desc` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`rt_id`)
) ENGINE = InnoDB;

-- TABLE LOAI THIET BI
CREATE TABLE IF NOT EXISTS `device_types` (
  `dt_id` VARCHAR(32) UNIQUE NOT NULL,
  `dt_name` VARCHAR(50) NOT NULL,
  `dt_desc` TEXT NOT NULL,
  `role` ENUM('ADMIN', 'HOTEL', 'USER') DEFAULT 'ADMIN',
  `user_id` VARCHAR(32) NOT NULL,
  `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  `updated_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE ON UPDATE CASCADE,
  PRIMARY KEY (`dt_id`)
) ENGINE = InnoDB;

-- TABLE PHONG
CREATE TABLE IF NOT EXISTS `rooms` (
  `room_id` VARCHAR(32) UNIQUE NOT NULL,
  `floor_id` VARCHAR(32) NOT NULL,
  `rt_id` VARCHAR(32) NOT NULL,
  `status_id` VARCHAR(32) NOT NULL,
  `hotel_id` VARCHAR(32) NOT NULL,
  `room_name` VARCHAR(50) NOT NULL,
  `room_desc` TEXT DEFAULT "",
  `room_thumb` TEXT NOT NULL,
  `file_name_img` TEXT NOT NULL,
  `max_pople` INT NOT NULL,
  `avaiable` BOOLEAN DEFAULT TRUE,
  `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  `updated_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  FOREIGN KEY (floor_id) REFERENCES floors(floor_id) ON DELETE CASCADE ON UPDATE CASCADE,
  FOREIGN KEY (rt_id) REFERENCES room_types(rt_id) ON DELETE CASCADE ON UPDATE CASCADE,
  FOREIGN KEY (status_id) REFERENCES statuses(status_id) ON DELETE CASCADE ON UPDATE CASCADE,
  FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id) ON DELETE CASCADE ON UPDATE CASCADE,
  PRIMARY KEY (`room_id`, `floor_id`)
) ENGINE = InnoDB;

-- TABLE ANH CUA PHONG
CREATE TABLE IF NOT EXISTS `room_images` (
  `r_image_id` VARCHAR(32) UNIQUE NOT NULL,
  `r_image_value` TEXT NOT NULL,
  `file_name` TEXT NOT NULL,
  `room_id` VARCHAR(32) NOT NULL,
  FOREIGN KEY (room_id) REFERENCES rooms(room_id) ON DELETE CASCADE ON UPDATE CASCADE,
  PRIMARY KEY (`r_image_id`)
) ENGINE = InnoDB;

-- TABLE GIA PHONG.
CREATE TABLE IF NOT EXISTS `room_prices` (
  `floor_id` VARCHAR(32) NOT NULL,
  `room_id` VARCHAR(32) NOT NULL,
  `price` INT CHECK(price > 10),
  `date_time` DATE NOT NULL,
  `discount` BOOLEAN DEFAULT FALSE,
  `percent_discount` INT CHECK(
    percent_discount >= 0
    AND percent_discount <= 100
  ),
  FOREIGN KEY (floor_id) REFERENCES rooms(floor_id) ON DELETE CASCADE ON UPDATE CASCADE,
  FOREIGN KEY (room_id) REFERENCES rooms(room_id) ON DELETE CASCADE ON UPDATE CASCADE,
  PRIMARY KEY (`room_id`, `floor_id`)
) ENGINE = InnoDB;

-- TABLE TRANG BI THIET BI CHO PHONG.
CREATE TABLE IF NOT EXISTS `equipments` (
  `floor_id` VARCHAR(32) NOT NULL,
  `room_id` VARCHAR(32) NOT NULL,
  `dt_id` VARCHAR(32) NOT NULL,
  `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (floor_id) REFERENCES rooms(floor_id) ON DELETE CASCADE ON UPDATE CASCADE,
  FOREIGN KEY (room_id) REFERENCES rooms(room_id) ON DELETE CASCADE ON UPDATE CASCADE,
  FOREIGN KEY (dt_id) REFERENCES device_types(dt_id) ON DELETE CASCADE ON UPDATE CASCADE,
  PRIMARY KEY (`dt_id`, `room_id`, `floor_id`)
) ENGINE = InnoDB;

-- TABLE CHI TIET HOA DON
CREATE TABLE IF NOT EXISTS `bill_details` (
  `bill_id` VARCHAR(32) NOT NULL,
  `floor_id` VARCHAR(32) NOT NULL,
  `room_id` VARCHAR(32) NOT NULL,
  `price` INTEGER CHECK(price > 10),
  `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  `updated_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  FOREIGN KEY (bill_id) REFERENCES bills(bill_id) ON DELETE CASCADE ON UPDATE CASCADE,
  FOREIGN KEY (room_id) REFERENCES rooms(room_id) ON DELETE CASCADE ON UPDATE CASCADE,
  FOREIGN KEY (floor_id) REFERENCES rooms(floor_id) ON DELETE CASCADE ON UPDATE CASCADE,
  PRIMARY KEY (`bill_id`, `room_id`, `floor_id`)
) ENGINE = InnoDB;

-- TABLE SU DUNG DICH VU
CREATE TABLE IF NOT EXISTS `use_service` (
  `floor_id` VARCHAR(32) NOT NULL,
  `room_id` VARCHAR(32) NOT NULL,
  `bill_id` VARCHAR(32) NOT NULL,
  `service_id` VARCHAR(32) NOT NULL,
  FOREIGN KEY (floor_id) REFERENCES bill_details(floor_id) ON DELETE CASCADE ON UPDATE CASCADE,
  FOREIGN KEY (room_id) REFERENCES bill_details(room_id) ON DELETE CASCADE ON UPDATE CASCADE,
  FOREIGN KEY (bill_id) REFERENCES bill_details(bill_id) ON DELETE CASCADE ON UPDATE CASCADE,
  FOREIGN KEY (service_id) REFERENCES services(service_id) ON DELETE CASCADE ON UPDATE CASCADE,
  PRIMARY KEY (`bill_id`, `room_id`, `floor_id`, `service_id`)
) ENGINE = InnoDB;

-- TABLE TOKEN
CREATE TABLE IF NOT EXISTS `tokens` (
  `user_id` VARCHAR(32) NOT NULL,
  `token` VARCHAR(255) NOT NULL,
  `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  `updated_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE ON UPDATE CASCADE,
  PRIMARY KEY (`user_id`)
) ENGINE = InnoDB;

-- TABLE SEESIONS
CREATE TABLE IF NOT EXISTS `seesions` (
  `user_id` VARCHAR(32) NOT NULL,
  `refresh_token` VARCHAR(255) NOT NULL,
  `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  `updated_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE ON UPDATE CASCADE,
  PRIMARY KEY (`user_id`)
) ENGINE = InnoDB;

CREATE TABLE IF NOT EXISTS `hotel_tags` (
  `tag_id` VARCHAR(32) NOT NULL,
  `tag_key` varchar(10) NOT NULL,
  `tag_value` varchar(100) NOT NULL,
  `hotel_id` VARCHAR(32) NOT NULL,
  FOREIGN KEY (hotel_id) REFERENCES hotels(hotel_id) ON DELETE CASCADE ON UPDATE CASCADE,
  PRIMARY KEY (`tag_id`)
) ENGINE = InnoDB
/**
 
 -- SELECT hotel_name, MATCH(`district_name`,`provice_name`,`ward_name`) AGAINST('+Vung') as score FROM `hotels` WHERE MATCH(`district_name`,`provice_name`,`ward_name`) AGAINST('+Vung')
 -- SHOW VARIABLES LIKE 'ft%'
 -- REPAIR TABLE hotels QUICK
 
 */